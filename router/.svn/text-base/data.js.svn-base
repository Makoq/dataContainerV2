var formidable = require('formidable');
var ObjectID = require('mongodb').ObjectID;//数据库ObjectId
var sd = require('silly-datetime');
var db = require("../models/db.js");
var fs = require('fs');
var file = require('./file.js');
// 压缩文件
var archiver = require('archiver');
var child_process = require('child_process');

exports.showDataPage = function (req, res, next) {
    if (req.session.login != "1") {//未登录
        //重定向
        res.redirect('/accounts/login');
        return;
    }

    // req.session.currentRouter = "/data";
    if (req.session.login == "1") {
        //如果登陆了
        var username = req.session.username;
        var login = true;
    } else {
        //没有登陆
        var username = "";  //制定一个空用户名
        var login = false;
    }

    res.render("data/datapage", {
        "login": login,
        "username": username,
        "active": "dataservice",
        "subactive": "dataservice_0",
        'th_active': 'dataservice_0_0'
    });
}


//显示上传数据界面
exports.showUploadDataPage = function (req, res, next) {
    if (req.session.login != "1") {//未登录
        //重定向
        res.redirect('/accounts/login');
        return;
    }

    if (req.session.login == "1") {
        //如果登陆了
        var username = req.session.username;
        var login = true;
    } else {
        //没有登陆
        var username = "";  //制定一个空用户名
        var login = false;
    }

    res.render("data/uploaddata", {
        "login": login,
        "username": username,
        "active": "dataservice",
        "subactive": "dataservice_0",
        'th_active': 'dataservice_0_0'
    });

}

// 上传数据
exports.uploadData = function (req, res, next) {
    //用户名唯一
    // var username = req.session.username;//当前用户名

    var form = new formidable.IncomingForm();
    //先上传到临时目录
    form.uploadDir = __dirname + '/../tmp';

    form.parse(req, function (err, fields, files) {

        var filename = files.files.name; // 文件原来的名字
        var filepath = files.files.path; // 上传文件的路径+临时文件名

        res.send(filepath + '[$]' + filename);
    });
}


//保存数据信息到数据库
exports.saveDataInfo = function (req, res, next) {
    // 'uName': $('#u_name').val(),
    // 'uEmail': $('#u_email').val(),
    // 'dName': $('#d_name').val(),
    // 'dDescription': $('#d_description').val(),
    // 'dAuthority': d_authority,
    // "dSnapshot": $('#snapshot').attr('src'),//img base64
    // 'dFiles': allData

    var form = new formidable.IncomingForm();
    form.uploadDir = __dirname + '/../tmp';

    form.parse(req, function (err, fields, files) {
        var uName = fields.uName;
        var uEmail = fields.uEmail;
        var dName = fields.dName;
        var dDescription = fields.dDescription;
        // var dTags = fields['dTags[]'];
        // var dGenTime = fields.dGenTime;
        // var dPropertyOwner = fields.dPropertyOwner;
        // var dRemarkers = fields.dRemarkers;
        // var dAuthorizationMode = fields.dAuthorizationMode;
        var available = fields.dAuthority;
        var dSnapshot = fields.dSnapshot;
        var dFiles = fields['dFiles[]'];

        // 用户如果没有选择图片，则使用默认图片
        if (dSnapshot === undefined) {
            var imageBuf = fs.readFileSync(__dirname + '/../public/images/logo.png');
            dSnapshot = 'data:image/png;base64,' + imageBuf.toString("base64");
        }

        // 从tmp目录中将数据移到data目录中
        var did = new ObjectID();

        // var base64Data = dSnapshot.replace(/^data:image\/\w+;base64,/, "");
        // var dataBuffer = new Buffer(base64Data, 'base64');

        // var sSnapshotType = 'jpg';
        // //获取图片格式
        // dSnapshot.replace(/^data:image\/\w+;base64,/, function (s, value) {
        //     sSnapshotType = s.split(';')[0].split('/')[1];
        // });

        var foldpath = __dirname + '/../upload/data/' + did;
        file.mkdir(foldpath);//若不存在，创建用户文件夹


        // try {
        //     fs.writeFileSync(foldpath + "/snapshot." + sSnapshotType, dataBuffer);
        // } catch (e) {
        //     console.log('save snapshot error:' + e);
        //     res.send('-3');
        //     return;
        // }

        (function iteration(i) {
            if (i == dFiles.length) {
                // save db
                db.insertOne('data', {
                    _id: did, name: dName, description: dDescription, author: req.session.username, uname: uName, uemail: uEmail,
                    snapshot: dSnapshot, available: available, datetime: sd.format(new Date(), 'YYYY-MM-DD HH:mm'), 'details': '', associate: '-1', delete: '-1'
                }, function (err, result) {
                    if (err) {
                        console.log('data info db insert error' + err);
                        res.send("-2");
                        return;
                    }
                    res.send('ok');//上传成功
                });
                return;
            }

            var realName = dFiles[i].split('[$]')[1];
            var savePath = foldpath + '/' + realName;
            // 文件重命名
            fs.rename(dFiles[i].split('[$]')[0], savePath, function (err) {
                if (err) {
                    console.log('data rename error： ' + err);
                    res.send("-1");
                    return;
                }
                iteration(i + 1);
            });
        })(0);
        // });
    });
}

//获取数据列表
// exports.getData = function (req, res, next) {
//     //get提交，获取参数  {"pageamount":10,"page":10,ids:'all'}
//     var paramJson = req.query;

//     //var param =  req.params.name;//get按照{}传递参数，req.params获取不到
//     var pageamount = parseInt(paramJson.pageamount);//每页的行数
//     var page = parseInt(paramJson.page);//第几页
//     var ids = paramJson.ids;
//     var isdelete = paramJson.delete === undefined ? '-1' : paramJson.delete ; // 1 已删除   -1  未删除

//     var findConditioin = new Array();

//     if (ids == "all") {//查询全部
//         findConditioin.push({});
//     } else if (ids instanceof Array) {
//         for (var i = 0; i < ids.length; i++) {
//             findConditioin.push({ "_id": ObjectID(ids[i]) });
//         }
//     }

//     // 排序  "sort":{"name":1}
//     db.find("data", { "$or": findConditioin, delete: isdelete }, { "pageamount": pageamount, "page": page }, function (err, result) {
//         if (err) {
//             res.send('-1');//获取数据失败
//             return;
//         }
//         res.send(result);
//     });

// }


// 得到datamap的snapshot
// exports.getDataSnapshot = function (req, res, next) {
//     var did = req.query.did;
//     var pic = req.query.pic;
//     try {
//         var imageBuf = fs.readFileSync(__dirname + '/../upload/data/' + did + '/' + pic);
//     } catch (err) {
//         console.log('read datamap snapshot error : ' + err);
//         //给一个默认图片
//         res.send('/images/logo.png');
//     }
//     if (imageBuf === undefined) {
//         res.send('/images/logo.png');
//     } else
//         res.send(imageBuf.toString('base64'));
// }


// 获取数据个数
// exports.getDataCount = function (req, res, next) {
//     db.getAllCount('data', function (result) {
//         //console.log(result);
//         res.send(result + '');
//     });
// }


// 下载数据
exports.dataDownload = function (req, res, next) {
    var did = req.query.id;

    db.find('data', { _id: ObjectID(did) }, function (err, result) {
        if (err) {
            console.log(err);
            res.send('-1');
            return;
        }
        if (result.length <= 0) {
            res.send('the data does not exit.');
        }
        //res.send(result.available);
        if (result[0].available == '-1') {
            res.send('the data can not be download.');
        } else if (result[0].available == '1') {
            // 下载数据
            var path = __dirname + '/../upload/data/' + did + '/';
            var tmppath = __dirname + '/../tmp/' + did + '.zip';

            var output = fs.createWriteStream(tmppath);
            var archive = archiver('zip');

            archive.on('error', function (err) {
                console.log(err);
                res.send('-1');
                return;
            });

            archive.pipe(output);
            // archive.bulk([
            //     { src: [path] }
            // ]);
            archive.directory(path, false);

            archive.finalize();

            output.on('close', function () {
                // console.log(archive.pointer() + ' total bytes');
                // console.log('archiver has been finalized and the output file descriptor has closed.');
                var data = fs.readFileSync(tmppath);

                res.set({
                    'Content-Type': 'file/xml',
                    'Content-Length': data.length
                });
                res.setHeader('Content-Disposition', 'attachment; filename=' + did + '.zip');

                fs.unlink(tmppath);

                res.end(data);
            });
        }
    });
}

// 切换数据服务状态
// type：服务类型
// field：切换哪个字段
// action：要切换的状态
// exports.switchDataServiceStatus = function (req, res, next) {
//     var action = req.query.action;
//     var id = req.query.id;

//     var available = '-1';

//     if (action === 'stop') {
//         available = '-1';
//     } else if (action === 'start') {
//         available = '1';
//     }

//     db.updateMany('data', { _id: ObjectID(id) }, { $set: { available: available } }, function (err, result) {
//         if (err) {
//             console.log(err);
//             res.send('-1');
//             return;
//         }
//         res.send('1');
//     });
// }

// 删除数据服务
// exports.deleteDataService = function (req, res, next) {
//     var id = req.query.id;

    

    //var dir = __dirname + '/../upload/data/' + id;
    //1.首先删除物理磁盘上的数据：调用子进程删除本地文件夹。
    // child_process.exec('rd /s /q ' + id, { cwd: __dirname + "/../upload/data" }, function (err, data, stderr) {
    //     if (err) {
    //         console.log('delete data service disk error: ' + err);
    //         res.send('-1');
    //         return;
    //     }
    //     //2.再删除数据中的信息
    //     db.deleteMany('data', { _id: ObjectID(id) }, function (err1, resul) {
    //         if (err1) {
    //             console.log('delete data service db error: ' + err1);
    //             res.send('-2');
    //             // return;
    //             // 设置该服务为不可用，因为执行到这一步，说明该服务已经物理删除了。
    //             db.updateMany('data', { _id: ObjectID(id) }, { $set: { 'available': '0' } }, function (err2, result) {
    //                 if (err2) {
    //                     console.log('update data service status error: ' + err2);
    //                     res.send('-3');
    //                     return;
    //                 }
    //                 res.send('-4');
    //                 return;
    //             });
    //         }
    //         res.redirect('/data');
    //     });
    // });
// }
